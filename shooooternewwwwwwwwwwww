import pygame
from random import randint
import time

win_width = 1200
win_height = 670
enemies = []
bullets = []
FPS = pygame.time.Clock()

window = pygame.display.set_mode((win_width, win_height))
pygame.display.set_caption("Shooter")


class Settings(): #клас налаштувань
    def __init__ (self, image, x, y, w, h):
        self.rect = pygame.Rect(x, y, w,h) #створюємо прямокутник-підложка
        self.image = pygame.image.load(image)
        self.image = pygame.transform.scale(self.image, (self.rect.width,self.rect.height))
    def draw(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(Settings):
    def __init__(self, image, x, y, w, h, s):
        super().__init__(image, x, y, w, h)
        self.speed = s
        self.flipped_image = pygame.transform.flip(self.image, True, False)
        self.no_flip_image = self.image
        self.flip = True
        self.hp = 3
        self.image_hp = pygame.transform.scale(pygame.image.load("heart.png"), (50, 50))

    def draw_hp(self):
        for h in range(self.hp):
            window.blit(self.image_hp, (h*50, 0))

    def move(self):
        self.draw_hp()
        global bullets, shoot
        if self.flip:
            self.image = self.no_flip_image
        else:
            self.image = self.flipped_image
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP] and self.rect.y>0:
            self.rect.y -= self.speed
        if keys[pygame.K_DOWN] and self.rect.y <win_height-self.rect.height:
            self.rect.y +=self.speed
        if keys[pygame.K_LEFT] and self.rect.x>0:
            self.flip = False
            self.rect.x -= self.speed
        if keys[pygame.K_RIGHT] and self.rect.x< win_width-self.rect.width:
            self.rect.x += self.speed
            self.flip = True
        if keys[pygame.K_SPACE] and shoot:
            shoot = False
            bullets.append(Bullets("LaserBullet.png", self.rect.centerx, self.rect.y, 20, 50, 10))
            shot = pygame.mixer.Sound("shot.mp3")
            shot.play()

class Enemy(Player):
    def __init__(self, image, x, y, w, h, s, hp):
        super().__init__(image, x, y, w, h, s)
        self.direction = True
        self.hp = hp

    def move(self):
        global p1, enemies
        self.rect.y += self.speed
         
        if self.rect.colliderect(p1.rect) and self in enemies:
            p1.hp -= 1
            enemies.remove(self)

        if self.rect.y > win_height:
            self.rect.y = randint(-5*self.rect.height, -1*self.rect.height)
            self.rect.x = randint(-5*self.rect.width, -1*self.rect.width)

        for e in enemies:
            if e != self and self.rect.colliderect(e.rect):
                self.rect.y = randint(-5*self.rect.height, -1*self.rect.height)

class Bullets(Player):
    def __init__(self, image, x, y, w, h, s):
        super().__init__(image, x, y, w, h, s)

    def p_shoot(self):
        global bullets, enemies, boss
        self.rect.y -= self.speed
        if self.rect.y < 0 and self in bullets:
            bullets.remove(self)
        for e in enemies:
            if self.rect.colliderect(e.rect) and self in bullets and e.hp > 0:
                e.hp -= 1
                bullets.remove(self)
            elif e.hp<=0:
                enemies.remove(e)
            
        if self.rect.colliderect(boss.rect) and self in bullets:
            boss.hp -= 1
            bullets.remove(self)

    def b_shoot(self):
        global p1, boss
        self.rect.y += self.speed
        if self.rect.y > win_height and self in boss.boss_bul:
            boss.boss_bul.remove(self)
        if self.rect.colliderect(p1.rect) and self in boss.boss_bul:
            p1.hp -= 1
            boss.boss_bul.remove(self)

class Label():
    def __init__(self, size, color):
        self.size = size
        self.color = color
    def set_text(self, text):
        self.text = pygame.font.SysFont("verdana", self.size).render(text, True, self.color)
    def draw(self, x, y):
        window.blit(self.text, (x, y))

class Button(Label):
    def __init__(self, size, color, x, y, w, h, btn_color):
        super().__init__(size, color)
        self.rect = pygame.Rect(x, y, w, h)
        self.btn_color = btn_color

    def draw(self, x, y):
        pygame.draw.rect(window, self.btn_color, self.rect)
        window.blit(self.text, (self.rect.x + x, self.rect.y + y))

    def play(self):
        global finish, game




class Boss(Player):
    def __init__(self, image, x, y, w, h, s, hp):
        super().__init__(image, x, y, w, h, s)
        self.move = True
        self.start = False
        self.boss_bul = []
        self.hp = hp
        self.hp1 = self.hp
        self.rect_hp = pygame.Rect(self.rect.x, 0, self.rect.width, 20)
    def move_boss(self):
        self.show_hp()
        if self.rect.y <= 20:
            self.rect.y += self.speed
        else:
            self.start = True
    def show_hp(self):
        w = self.hp * self.rect.width/self.hp1
        self.rect_hp2 = pygame.Rect(self.rect.x, 0, w, 20)
        pygame.draw.rect(window,"red", self.rect_hp)
        pygame.draw.rect(window,"green", self.rect_hp2)


    def shoot(self):
        if self.start == True and len(self.boss_bul) == 0:
            x = 10
            for i in range(randint(1, 7)):
                self.boss_bul.append(Bullets("LaserBullet.png", x, self.rect.y+self.rect.height, 40, 50, 10))
                x = randint(150, win_width)
            self.start = False
        elif self.start == False and len(self.boss_bul) == 0:
            self.start = True
 
def levels():
    global enemies, num_enemies, start, boss
    if start == True and num_level == 1:
        num_enemies = 1
        for e in range(num_enemies):
            enemies.append(Enemy("enemy.png", randint(0, win_width-100), 0, win_width//10, win_width//10, 1, 1))
        start = False
        boss = Boss("boss.png", 0, -150, win_width, 220, 5, 15)

    elif start == True and num_level == 2:
        num_enemies = 1
        for e in range(num_enemies):
            enemies.append(Enemy("enemy.png", randint(0, win_width-100), 0, win_width//10, win_width//10, randint(1,3), 2))
        start = False
        boss = Boss("boss2.png", 0, -150, win_width, 220, 5, 15)



back = Settings("back.jpg", 0, 0, win_width, win_height)
p1 = Player("player.png", 500, 550, 130, 130, 15)

status_menu = True
game = False
start = True
num_level = 1
finish = False
game_over = False
current = time.time()
shoot = True

pygame.font.init()
pygame.mixer.init()
pygame.mixer.music.load("music.wav")
pygame.mixer.music.play()
# win = pygame.mixer.Sound("win.wav")
# lose = pygame.mixer.Sound("lose.wav")
buttons = [Button(40, (0, 0, 0), win_width//3, win_height//3, 200, 100, (255, 255, 255)),
           Button(40, (0, 0, 0), win_width//3, win_height//3+110, 200, 100, (255, 255, 255))]
buttons[0].set_text("PLAY")
buttons[1].set_text("EXIT")

while status_menu:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            status_menu=False
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            x, y = event.pos
            if buttons[0].rect.collidepoint(x, y):
                game = True
            if buttons[1].rect.collidepoint(x, y):
                status_menu = False
    if game != True:
        back.draw()
        for b in buttons:
            b.draw(20, 20)

        pygame.display.flip()
        FPS.tick(40)
    else:
        while game:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    game=False

            

            if finish != True:
                back.draw()
                levels()

                if time.time()-current>0.5:
                    current = time.time()
                    shoot = True

                for e in enemies:
                    e.draw()
                    e.move()
                for b in bullets:
                    b.p_shoot()
                    b.draw()

                if p1.hp <= 0:
                    finish = True

                if len(enemies) == 0:
                    boss.move_boss()
                    boss.draw()
                    boss.shoot()
                    for b in boss.boss_bul:
                        b.b_shoot()
                        b.draw()

                    if boss.hp <= 0:
                        start = True
                        num_level += 1

                    

                p1.move()
                p1.draw()
    
    
            pygame.display.flip()
            FPS.tick(40)


