import pygame


win_width = 1200
win_height = 700
FPS = pygame.time.Clock()

window = pygame.display.set_mode((win_width, win_height))
pygame.display.set_caption("Лабіринт")

class Settings(): #клас налаштувань
    def __init__ (self, image, x, y, w, h):
        self.rect = pygame.Rect(x, y, w,h) #створюємо прямокутник-підложка
        self.image = pygame.image.load(image)
        self.image = pygame.transform.scale(self.image, (self.rect.width,self.rect.height))
    
    def draw(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(Settings):
    def __init__(self, image, x, y, w, h, s):
        super().__init__(image, x, y, w, h)
        self.speed = s
        self.flipped_image = pygame.transform.flip(self.image, True, False)
        self.no_flip_image = self.image
        self.flip = True

    def move(self):
        if self.flip:
            self.image = self.no_flip_image
        else:
            self.image = self.flipped_image
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP] and self.rect.y>0:
            self.rect.y -= self.speed
        if keys[pygame.K_DOWN] and self.rect.y <win_height-self.rect.height:
            self.rect.y +=self.speed
        if keys[pygame.K_LEFT] and self.rect.x>0:
            self.flip = False
            self.rect.x -= self.speed
        if keys[pygame.K_RIGHT] and self.rect.x< win_width-self.rect.width:
            self.rect.x += self.speed
            self.flip = True

class Enemy(Player):
    def __init__(self, image, x, y, w, h, s):
        super().__init__(image, x, y, w, h, s)
        self.direction = True #йде впарво

    def move(self, x1, x2):
        if self.rect.x < x1:
            self.direction = True
        elif self.rect.x > x2:
            self.direction = False

        if self.direction:
            self.image = self.no_flip_image
            self.rect.x += self.speed
        else:
            self.image = self.flipped_image
            self.rect.x -= self.speed

class Wall():
    def __init__(self, x, y, w, h, color):
        self.rect = pygame.Rect(x,y,w,h)
        self.color = color
    def draw(self):
        pygame.draw.rect(window, self.color, self.rect)
    

    
back = Settings("back.jpg", 0,0, win_width, win_height)
p1 = Player("player.png", 10, win_height//2, 100, 100, 5)
enemy = Enemy("enemy.png", win_width//1.7, win_height//2, win_width//8, win_width//8, 4)
gold = Settings("gold.png", win_width-150, win_height-150, 100, 100)
walls = [
    Wall(0, 0, win_width, 5, (255, 255, 0)),
    Wall(250, 250, 5, win_height-120, (255, 255, 0)),
    Wall(250, 0, 5, 120, (255, 255, 0)),
    Wall(0, 665, win_width, 5, (255, 255, 0)),
    Wall(0, 0, 5, win_height, (255, 255, 0)),
    Wall(1195, 0, 5, win_height, (255, 255, 0)),
    Wall(250, 120, 240, 5, (255, 255, 0)),
    Wall(490, 120, 5, 320, (255, 255, 0)),
    Wall(250, 250, 125, 5, (255, 255, 0)),
    Wall(370, 250, 5, 300, (255, 255, 0)),
    Wall(370, 550, 125, 5, (255, 255, 0)),
    Wall(490, 550, 380, 5, (255, 255, 0)),
    Wall(490, 440, 240, 5, (255, 255, 0)),
    Wall(730, 120, 5, 325, (255, 255, 0)),
    Wall(630, 120, 300, 5, (255, 255, 0)),
    Wall(630, 120, 5, 225, (255, 255, 0)),
]




game = True
finish = False

pygame.mixer.init()
pygame.mixer.music.load("music.mp3")
pygame.mixer.music.play()

while game:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game=False

    if finish != True:
        back.draw()
        for w in walls:
            if p1.rect.colliderect(w.rect):
                finish = True
            w.draw()
        p1.move()
        p1.draw()

        enemy.move(win_width//1.7, win_width-enemy.rect.width)
        enemy.draw()
        gold.draw()
    
    pygame.display.flip()
    FPS.tick(40)
